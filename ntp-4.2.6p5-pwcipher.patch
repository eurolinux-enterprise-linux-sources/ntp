diff -up ntp-4.2.6p5/html/keygen.html.pwcipher ntp-4.2.6p5/html/keygen.html
--- ntp-4.2.6p5/html/keygen.html.pwcipher	2013-07-11 17:15:10.500056295 +0200
+++ ntp-4.2.6p5/html/keygen.html	2013-07-11 17:15:10.519056311 +0200
@@ -44,8 +44,8 @@
 <h4 id="synop">Synopsis</h4>
 
 <p id="intro"><tt>ntp-keygen [ -deGHIMPT ] [ -b <i>modulus</i> ] [ -c [RSA-MD2 | RSA-MD5 | RSA-SHA
-		| RSA-SHA1 | RSA-MDC2 | RSA-RIPEMD160 | DSA-SHA | DSA-SHA1 ] ] [
-		-i <i>group</i> ]
+		| RSA-SHA1 | RSA-MDC2 | RSA-RIPEMD160 | DSA-SHA | DSA-SHA1 ] ]
+		[ -C <i>cipher</i> ] [ -i <i>group</i> ]
 		[ -m <i>modulus</i> ]  [ -p <i>passwd2</i> ] [ -q <i>passwd1</i> ] [ -S
 		[ RSA | DSA ] ] [ -s <i>host</i> ] [ -V <i>nkeys</i> ]</tt></p>
 
@@ -150,6 +150,9 @@
 	compatibility with FIPS 140-2 is required, either the <tt>DSA-SHA</tt> or <tt>DSA-SHA1</tt> scheme
 	must be used.</dd>
 
+<dt><tt>-C <i>cipher</i></tt>
+<dd>Select the cipher which is used to encrypt the files containing private keys.  The default is DES in CBC mode, equivalent to "-C des-cbc".  The openssl tool lists ciphers available in "openssl -h" output.</dd>
+
 <dt><tt>-d</tt></dt>
 <dd>Enable debugging. This option displays the cryptographic data produced for eye-friendly billboards.</dd>
 
@@ -217,7 +220,7 @@
 
 <p>All files begin with two nonencrypted lines. The first line contains the file name in the format <tt>ntpkey_<i>key</i>_<i>host</i>.<i>fstamp</i></tt>. The second line contains the datestamp in conventional Unix <tt>date</tt> format. Lines beginning with <tt>#</tt> are ignored.</p>
 
-<p>The remainder of the file contains cryptographic data encoded first using ASN.1 rules, then encrypted using the DES-CBC algorithm and given password and finally written in PEM-encoded printable ASCII text preceded and followed by MIME content identifier lines.</p>
+<p>The remainder of the file contains cryptographic data encoded first using ASN.1 rules, then encrypted using the cipher selected with <tt>-C</tt> and given password and finally written in PEM-encoded printable ASCII text preceded and followed by MIME content identifier lines.</p>
 
 <p id="symkey">The format of the symmetric keys file is somewhat different than the other files in the interest of backward compatibility. Since DES-CBC is deprecated in NTPv4, the only key format of interest is MD5 alphanumeric strings. Following the header the keys are entered one per line in the format</p>
 
@@ -239,4 +242,4 @@
 
 </body>
 
-</html>
\ No newline at end of file
+</html>
diff -up ntp-4.2.6p5/util/ntp-keygen-opts.c.pwcipher ntp-4.2.6p5/util/ntp-keygen-opts.c
--- ntp-4.2.6p5/util/ntp-keygen-opts.c.pwcipher	2013-07-11 17:15:10.501056295 +0200
+++ ntp-4.2.6p5/util/ntp-keygen-opts.c	2013-07-11 17:18:56.138259872 +0200
@@ -96,6 +96,24 @@ static char const zCertificate_Name[]
 #endif  /* OPENSSL */
 
 /*
+ *  Cipher option description:
+ */
+#ifdef OPENSSL
+static char const zCipherText[] =
+        "privatekey cipher";
+static char const zCipher_NAME[]             = "CIPHER";
+static char const zCipher_Name[]             = "cipher";
+#define CIPHER_FLAGS       (OPTST_DISABLED \
+        | OPTST_SET_ARGTYPE(OPARG_TYPE_STRING))
+
+#else   /* disable Cipher */
+#define CIPHER_FLAGS       (OPTST_OMITTED | OPTST_NO_INIT)
+#define zCipher_NAME      NULL
+#define zCipherText       NULL
+#define zCipher_Name      NULL
+#endif  /* OPENSSL */
+
+/*
  *  Debug_Level option description:
  */
 static char const zDebug_LevelText[] =
@@ -684,6 +702,17 @@ static tOptDesc optDesc[OPTION_CT] = {
      /* desc, NAME, name */ zImbitsText, zImbits_NAME, zImbits_Name,
      /* disablement strs */ NULL, NULL },
 
+  {  /* entry idx, value */ 19, VALUE_OPT_CIPHER,
+     /* equiv idx, value */ 19, VALUE_OPT_CIPHER,
+     /* equivalenced to  */ NO_EQUIVALENT,
+     /* min, max, act ct */ 0, 1, 0,
+     /* opt state flags  */ CIPHER_FLAGS, 0,
+     /* last opt argumnt */ { NULL },
+     /* arg list/cookie  */ NULL,
+     /* must/cannot opts */ NULL, NULL,
+     /* option proc      */ NULL,
+     /* desc, NAME, name */ zCipherText, zCipher_NAME, zCipher_Name,
+     /* disablement strs */ NULL, NULL },
 
   {  /* entry idx, value */ INDEX_OPT_VERSION, VALUE_OPT_VERSION,
      /* equiv idx value  */ NO_EQUIVALENT, 0,
@@ -831,7 +860,7 @@ tOptions ntp_keygenOptions = {
       NO_EQUIVALENT, /* '-#' option index */
       NO_EQUIVALENT /* index of default opt */
     },
-    24 /* full option count */, 19 /* user option count */,
+    25 /* full option count */, 20 /* user option count */,
     ntp_keygen_full_usage, ntp_keygen_short_usage,
     NULL, NULL,
     PKGDATADIR, ntp_keygen_packager_info
diff -up ntp-4.2.6p5/util/ntp-keygen-opts.h.pwcipher ntp-4.2.6p5/util/ntp-keygen-opts.h
--- ntp-4.2.6p5/util/ntp-keygen-opts.h.pwcipher	2013-07-11 17:15:10.502056296 +0200
+++ ntp-4.2.6p5/util/ntp-keygen-opts.h	2013-07-11 17:17:27.839179717 +0200
@@ -68,14 +68,15 @@ typedef enum {
     INDEX_OPT_MV_PARAMS        = 16,
     INDEX_OPT_MV_KEYS          = 17,
     INDEX_OPT_IMBITS           = 18,
-    INDEX_OPT_VERSION          = 19,
-    INDEX_OPT_HELP             = 20,
-    INDEX_OPT_MORE_HELP        = 21,
-    INDEX_OPT_SAVE_OPTS        = 22,
-    INDEX_OPT_LOAD_OPTS        = 23
+    INDEX_OPT_CIPHER           = 19,
+    INDEX_OPT_VERSION          = 20,
+    INDEX_OPT_HELP             = 21,
+    INDEX_OPT_MORE_HELP        = 22,
+    INDEX_OPT_SAVE_OPTS        = 23,
+    INDEX_OPT_LOAD_OPTS        = 24
 } teOptIndex;
 
-#define OPTION_CT    24
+#define OPTION_CT    25
 #define NTP_KEYGEN_VERSION       "4.2.6p5"
 #define NTP_KEYGEN_FULL_VERSION  "ntp-keygen (ntp) 4.2.6p5"
 
@@ -120,6 +121,10 @@ typedef enum {
 #  warning undefining CERTIFICATE due to option name conflict
 #  undef   CERTIFICATE
 # endif
+# ifdef    CIPHER
+#  warning undefining CIPHER due to option name conflict
+#  undef   CIPHER
+# endif
 # ifdef    DEBUG_LEVEL
 #  warning undefining DEBUG_LEVEL due to option name conflict
 #  undef   DEBUG_LEVEL
@@ -191,6 +196,7 @@ typedef enum {
 #else  /* NO_OPTION_NAME_WARNINGS */
 # undef IMBITS
 # undef CERTIFICATE
+# undef CIPHER
 # undef DEBUG_LEVEL
 # undef SET_DEBUG_LEVEL
 # undef ID_KEY
@@ -220,6 +226,7 @@ typedef enum {
 #define OPT_VALUE_IMBITS         (DESC(IMBITS).optArg.argInt)
 #endif /* OPENSSL */
 #define VALUE_OPT_CERTIFICATE    'c'
+#define VALUE_OPT_CIPHER         'C'
 #define VALUE_OPT_DEBUG_LEVEL    'd'
 #define VALUE_OPT_SET_DEBUG_LEVEL 'D'
 #define VALUE_OPT_ID_KEY         'e'
diff -up ntp-4.2.6p5/util/ntp-keygen.c.pwcipher ntp-4.2.6p5/util/ntp-keygen.c
--- ntp-4.2.6p5/util/ntp-keygen.c.pwcipher	2013-07-11 17:15:10.503056297 +0200
+++ ntp-4.2.6p5/util/ntp-keygen.c	2013-07-11 17:15:10.527056319 +0200
@@ -171,6 +171,7 @@ char	*passwd1 = NULL;	/* input private k
 char	*passwd2 = NULL;	/* output private key password */
 #ifdef OPENSSL
 long	d0, d1, d2, d3;		/* callback counters */
+const EVP_CIPHER * cipher = NULL;
 #endif /* OPENSSL */
 
 #ifdef SYS_WINNT
@@ -238,6 +239,7 @@ main(
 	const EVP_MD *ectx;	/* EVP digest */
 	char	pathbuf[MAXFILENAME + 1];
 	const char *scheme = NULL; /* digest/signature scheme */
+	const char *ciphername = NULL; /* to encrypt priv. key */
 	char	*exten = NULL;	/* private extension */
 	char	*grpkey = NULL;	/* identity extension */
 	int	nid;		/* X509 digest/signature scheme */
@@ -328,6 +330,9 @@ main(
 	if (HAVE_OPT( CERTIFICATE ))
 		scheme = OPT_ARG( CERTIFICATE );
 
+	if (HAVE_OPT( CIPHER ))
+		ciphername = OPT_ARG( CIPHER );
+
 	if (HAVE_OPT( SUBJECT_NAME ))
 		hostname = strdup(OPT_ARG( SUBJECT_NAME ));
 
@@ -424,6 +429,13 @@ main(
 	}
 	if (scheme == NULL)
 		scheme = "RSA-MD5";
+	if (ciphername == NULL)
+		ciphername = "des-cbc";
+	cipher = EVP_get_cipherbyname(ciphername);
+	if (cipher == NULL) {
+		fprintf(stderr, "Unknown cipher %s\n", ciphername);
+		exit(-1);
+	}
 	if (groupname == NULL)
 		groupname = hostname;
 	fprintf(stderr, "Using host %s group %s\n", hostname,
@@ -526,9 +538,9 @@ main(
 		BN_copy(rsa->q, BN_value_one());
 		pkey = EVP_PKEY_new();
 		EVP_PKEY_assign_RSA(pkey, rsa);
-		PEM_write_PrivateKey(stdout, pkey, NULL, NULL, 0, NULL,
-		    NULL);
-		fclose(stdout);
+		PEM_write_PKCS8PrivateKey(stdout, pkey, NULL, NULL, 0,
+		    NULL, NULL);
+		fflush(stdout);
 		if (debug)
 			RSA_print_fp(stderr, rsa, 0);
 	}
@@ -548,9 +560,9 @@ main(
 		rsa = pkey_gqkey->pkey.rsa;
 		pkey = EVP_PKEY_new();
 		EVP_PKEY_assign_RSA(pkey, rsa);
-		PEM_write_PrivateKey(stdout, pkey,
-		    EVP_des_cbc(), NULL, 0, NULL, passwd2);
-		fclose(stdout);
+		PEM_write_PKCS8PrivateKey(stdout, pkey, cipher, NULL, 0,
+		    NULL, passwd2);
+		fflush(stdout);
 		if (debug)
 			RSA_print_fp(stderr, rsa, 0);
 	}
@@ -590,9 +602,9 @@ main(
 		BN_copy(dsa->priv_key, BN_value_one());
 		pkey = EVP_PKEY_new();
 		EVP_PKEY_assign_DSA(pkey, dsa);
-		PEM_write_PrivateKey(stdout, pkey, NULL, NULL, 0, NULL,
-		    NULL);
-		fclose(stdout);
+		PEM_write_PKCS8PrivateKey(stdout, pkey, NULL, NULL, 0,
+		    NULL, NULL);
+		fflush(stdout);
 		if (debug)
 			DSA_print_fp(stderr, dsa, 0);
 	}
@@ -613,9 +625,9 @@ main(
 		dsa = pkey_iffkey->pkey.dsa;
 		pkey = EVP_PKEY_new();
 		EVP_PKEY_assign_DSA(pkey, dsa);
-		PEM_write_PrivateKey(stdout, pkey, EVP_des_cbc(), NULL,
-		    0, NULL, passwd2);
-		fclose(stdout);
+		PEM_write_PKCS8PrivateKey(stdout, pkey, cipher, NULL, 0,
+		    NULL, passwd2);
+		fflush(stdout);
 		if (debug)
 			DSA_print_fp(stderr, dsa, 0);
 	}
@@ -651,9 +663,9 @@ main(
 		fprintf(stdout, "# %s\n# %s\n", filename,
 		    ctime(&epoch));
 		pkey = pkey_mvpar[2];
-		PEM_write_PrivateKey(stdout, pkey, NULL, NULL, 0, NULL,
-		    NULL);
-		fclose(stdout);
+		PEM_write_PKCS8PrivateKey(stdout, pkey, NULL, NULL, 0,
+		    NULL, NULL);
+		fflush(stdout);
 		if (debug)
 			DSA_print_fp(stderr, pkey->pkey.dsa, 0);
 	}
@@ -670,9 +682,9 @@ main(
 		fprintf(stdout, "# %s\n# %s\n", filename,
 		    ctime(&epoch));
 		pkey = pkey_mvpar[1];
-		PEM_write_PrivateKey(stdout, pkey, EVP_des_cbc(), NULL,
-		    0, NULL, passwd2);
-		fclose(stdout);
+		PEM_write_PKCS8PrivateKey(stdout, pkey, cipher, NULL, 0,
+		    NULL, passwd2);
+		fflush(stdout);
 		if (debug)
 			DSA_print_fp(stderr, pkey->pkey.dsa, 0);
 	}
@@ -892,7 +904,7 @@ gen_rsa(
 		str = fheader("RSAhost", id, hostname);
 	pkey = EVP_PKEY_new();
 	EVP_PKEY_assign_RSA(pkey, rsa);
-	PEM_write_PrivateKey(str, pkey, EVP_des_cbc(), NULL, 0, NULL,
+	PEM_write_PKCS8PrivateKey(str, pkey, cipher, NULL, 0, NULL,
 	    passwd1);
 	fclose(str);
 	if (debug)
@@ -947,7 +959,7 @@ gen_dsa(
 	str = fheader("DSAsign", id, hostname);
 	pkey = EVP_PKEY_new();
 	EVP_PKEY_assign_DSA(pkey, dsa);
-	PEM_write_PrivateKey(str, pkey, EVP_des_cbc(), NULL, 0, NULL,
+	PEM_write_PKCS8PrivateKey(str, pkey, cipher, NULL, 0, NULL,
 	    passwd1);
 	fclose(str);
 	if (debug)
@@ -1114,7 +1126,7 @@ gen_iffkey(
 	str = fheader("IFFkey", id, groupname);
 	pkey = EVP_PKEY_new();
 	EVP_PKEY_assign_DSA(pkey, dsa);
-	PEM_write_PrivateKey(str, pkey, EVP_des_cbc(), NULL, 0, NULL,
+	PEM_write_PKCS8PrivateKey(str, pkey, cipher, NULL, 0, NULL,
 	    passwd1);
 	fclose(str);
 	if (debug)
@@ -1311,7 +1323,7 @@ gen_gqkey(
 	str = fheader("GQkey", id, groupname);
 	pkey = EVP_PKEY_new();
 	EVP_PKEY_assign_RSA(pkey, rsa);
-	PEM_write_PrivateKey(str, pkey, EVP_des_cbc(), NULL, 0, NULL,
+	PEM_write_PKCS8PrivateKey(str, pkey, cipher, NULL, 0, NULL,
 	    passwd1);
 	fclose(str);
 	if (debug)
@@ -1716,7 +1728,7 @@ gen_mvkey(
 	BN_copy(dsa->pub_key, b);
 	pkey = EVP_PKEY_new();
 	EVP_PKEY_assign_DSA(pkey, dsa);
-	PEM_write_PrivateKey(str, pkey, EVP_des_cbc(), NULL, 0, NULL,
+	PEM_write_PKCS8PrivateKey(str, pkey, cipher, NULL, 0, NULL,
 	    passwd1);
 	evpars[i++] = pkey;
 	if (debug)
@@ -1742,7 +1754,7 @@ gen_mvkey(
 	dsa2->pub_key = BN_dup(ghat);
 	pkey1 = EVP_PKEY_new();
 	EVP_PKEY_assign_DSA(pkey1, dsa2);
-	PEM_write_PrivateKey(str, pkey1, EVP_des_cbc(), NULL, 0, NULL,
+	PEM_write_PKCS8PrivateKey(str, pkey1, cipher, NULL, 0, NULL,
 	    passwd1);
 	evpars[i++] = pkey1;
 	if (debug)
@@ -1768,7 +1780,7 @@ gen_mvkey(
 		sdsa->pub_key = BN_dup(xhat[j]);
 		pkey1 = EVP_PKEY_new();
 		EVP_PKEY_set1_DSA(pkey1, sdsa);
-		PEM_write_PrivateKey(str, pkey1, EVP_des_cbc(), NULL, 0,
+		PEM_write_PKCS8PrivateKey(str, pkey1, cipher, NULL, 0,
 		    NULL, passwd1);
 		evpars[i++] = pkey1;
 		if (debug)
